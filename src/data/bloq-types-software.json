{
  "bloqTypes": [
    {
      "name": "TurnOnLed",
      "type": "statement",
      "content": [
        {
          "type": "label",
          "text": "Turn on"
        },
        {
          "type": "select",
          "componentClass": "Led",
          "dataField": "component"
        }
      ],
      "code": {
        "statement": "digitalWrite({{data.component.name}}ColorPin, LOW);"
      }
    },
    {
      "name": "TurnOffLed",
      "type": "statement",
      "content": [
        {
          "type": "label",
          "text": "Turn off"
        },
        {
          "type": "select",
          "componentClass": "Led",
          "dataField": "component"
        }
      ],
      "code": {
        "statement": "digitalWrite({{data.component.name}}ColorPin, HIGH);"
      }
    },
    {
      "name": "OnButtonPressed",
      "type": "event",
      "async": true,
      "content": [
        {
          "type": "label",
          "text": "When"
        },
        {
          "type": "select",
          "componentClass": "Button",
          "dataField": "component"
        },
        {
          "type": "label",
          "text": "is pressed"
        }
      ],
      "code": {
        "declarations": "void {{data.component.name}}_pressed();",
        "definitions": "void {{data.component.name}}_pressed() {\n if({{data.component.name}}PinOn) return;\n{{data.component.name}}PinOn = true;\n{{nextCode.statement}}\n{{finallyCode}}}\n",
        "statement": "if(digitalRead({{data.component.name}}Pin)) {{data.component.name}}_pressed();",
        "finally": "{{data.component.name}}PinOn = false;\n"
      }
    },
    {
      "name": "Delay",
      "type": "statement",
      "async": true,
      "content": [
        {
          "type": "label",
          "text": "Delay"
        },
        {
          "type": "input",
          "dataField": "delay"
        },
        {
          "type": "label",
          "text": "seconds"
        }
      ],
      "code": {
        "definitions": "void delay_{{bloqId}}() {\n {{nextCode.statement}}\n{{finallyCode}}}\n",
        "statement": "heap.delay({{data.delay}});\nheap.insert(delay_{{bloqId}});\n"
      }
    },
    {
      "name": "If",
      "type": "codeblock",
      "content": [
        {
          "type": "label",
          "text": "if"
        },
        {
          "type": "bloq",
          "bloqType": "boolean",
          "dataField": "condition"
        }
      ],
      "code": {
        "statement": "if ({{data.condition.code.statement}}) { {{childrenCode.statement}} }"
      }
    },
    {
      "name": "True",
      "type": "boolean",
      "content": [
        {
          "type": "label",
          "text": "True"
        }
      ],
      "code": {
        "statement": "true"
      }
    }
  ]
}
