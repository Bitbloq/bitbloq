# import Date, ObjectID, Role from "./scalars.graphql"
# import Submission from "./submission.graphql"
# import Resource from "./upload.graphql"

directive @authRequired(requires: [Role] = [ADMIN]) on QUERY | FIELD

type Query {
  exercises: [Exercise] @authRequired(requires: [TEACHER])
  exercise(id: ObjectID!): Exercise
  exercisesByDocument(document: ObjectID!): [Exercise]
    @authRequired(requires: [TEACHER])
  exerciseByCode(code: String!): Exercise
}
type Mutation {
  createExercise(input: ExerciseIn!): Exercise
    @authRequired(requires: [TEACHER])
  changeSubmissionsState(id: ObjectID!, subState: Boolean!): Exercise
    @authRequired(requires: [TEACHER])
  updateExercise(id: ObjectID!, input: ExerciseIn): Exercise
    @authRequired(requires: [TEACHER])
  deleteExercise(id: ObjectID!): Exercise @authRequired(requires: [TEACHER])
}

type Exercise {
  id: ObjectID
  document: ObjectID
  user: ObjectID
  title: String
  content: String
  contentVersion: Number
  cache: String
  code: String
  type: String
  description: String
  teacherName: String
  acceptSubmissions: Boolean
  image: String
  expireDate: Date
  createdAt: Date
  updatedAt: Date
  submissions: [Submission]
  resources: [Resource]
}

input ExerciseIn {
  document: ObjectID
  title: String
  code: String
  description: String
  acceptSubmissions: Boolean
  expireDate: Date
  contentVersion: Number
}
