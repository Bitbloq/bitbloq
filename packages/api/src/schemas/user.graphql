# import Date, ObjectID, EmailAddress, Role, SessionExpires from "./scalars.graphql"
# import Document from "./document.graphql"
# import Folder from "./folder.graphql"

directive @authRequired(requires: [Role] = [ADMIN]) on QUERY | FIELD

type Query {
  users: [User] @authRequired(requires: [ADMIN])
  me: User @authRequired(requires: [USER])
}
type Mutation {
  saveUserData(input: UserIn!): UserStep1
  finishSignUp(id: ObjectID!, userPlan: String!): String
  activateAccount(token: String): String
  login(email: EmailAddress!, password: String!): String
  loginWithGoogle(token: String!): SocialLogin
  loginWithMicrosoft(token: String!): SocialLogin
  renewSession: String
  sendForgotPasswordEmail(email: EmailAddress!): String
  checkForgotPasswordToken(token: String): Boolean
  updateForgotPassword(token: String, newPassword: String): String
  deleteUser(id: ObjectID!): User @authRequired(requires: [USER])
  updateUserData(id: ObjectID!, input: UpdateUserData!): User
    @authRequired(requires: [USER])
  updateMyPassword(currentPassword: String!, newPassword: String!): User
    @authRequired(requires: [USER])
  updateMyPlan(userPlan: String!): User @authRequired(requires: [USER])
  sendChangeMyEmailToken(newEmail: String!): String
    @authRequired(requires: [USER])
  confirmChangeEmail(token: String!, password: String!): String
}
type Subscription {
  userSessionExpires: SessionExpires @authRequired(requires: [USER])
}

type UserStep1 {
  id: ObjectID
  email: EmailAddress
}

type SocialLogin {
  id: ObjectID
  finishedSignUp: Boolean
  token: String
}

input UpdateUserData {
  name: String
  surnames: String
  birthDate: Date
  avatar: Upload
}

type User {
  id: ObjectID
  email: EmailAddress
  password: String
  admin: Boolean
  publisher: Boolean
  teacher: Boolean
  teacherPro: Boolean
  family: Boolean
  name: String
  surnames: String
  avatar: String
  birthDate: Date
  active: Boolean
  signUpToken: String
  authToken: String
  notifications: Boolean
  imTeacherCheck: Boolean
  centerName: String
  educationalStage: String
  city: String
  postCode: String
  country: String
  createdAt: Date
  updatedAt: Date
  lastLogin: Date
  rootFolder: ObjectID
  documents: [Document]
  folders: [Folder]
}

input UserIn {
  email: EmailAddress
  password: String
  name: String
  surnames: String
  birthDate: Date
  active: Boolean
  signUpToken: String
  authToken: String
  notifications: Boolean
  imTeacherCheck: Boolean
  centerName: String
  educationalStage: String
  city: String
  postCode: String
  country: String
}
