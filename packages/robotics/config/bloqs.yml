---

# Generic bloqs

## Component

- name: read
  instructionType: parameter
  category: component
  subCategory: basic
  code:
    main: |-
      digitalRead({{getPinName(parameters.component, 0, 0)}})
  uiElements:
    - type: label
      text: robotics.read
    - type: select-component
      parameterName: component
      componentTypes:
        - digital-input

- name: variable-components
  instructionType: parameter
  category: component
  subCategory: advanced
  code:
    main: |-
      {{parameters.component.name}}
  uiElements:
    - type: label
      text: robotics.variable-components
    - type: select-component
      parameterName: component

- name: digital-read
  instructionType: parameter
  category: component
  subCategory: advanced
  code:
    main: |-
      digitalRead({{getBloqCode(parameters.pin)}})
  uiElements:
    - type: label
      text: robotics.read-digital-pin
    - type: parameter
      parameterName: pin



## Control

- name: if
  instructionType: block
  category: control
  subCategory: basic
  uiElements:
    - type: label
      text: robotics.if
    - type: parameter
      parameterName: value1
    - type: select
      parameterName: comparation
      options:
        - value: eq
          label: '='
        - value: neq
          label: '!='
        - value: gt
          label: '>'
        - value: gte
          label: '>='
        - value: lt
          label: '<'
        - value: lte
          label: '<='
    - type: parameter
      parameterName: value2
    - type: label
      text: robotics.execute

- name: number
  instructionType: parameter
  category: math
  subCategory: basic
  code:
    main: '{{parameters.value}}'
  uiElements:
    - type: text-input
      parameterName: value
      text: robotics.read
      inputType: number

# Zumjunior

- name: turn-zumjunior-rgb-led
  instructionType: statement
  category: component
  subCategory: junior
  forComponents:
    - zumjunior-rgb-led
  code:
    main: |-
      zumJunior.setRGBLEDColor(BQ::ZUMJunior::{{parameters.color}});
  uiElements:
    - type: label
      text: robotics.turn-zumjunior-rgb-led
    - type: select
      parameterName: color
      options:
        - value: RED
          label: robotics.red
        - value: GREEN
          label: robotics.green
        - value: BLUE
          label: robotics.blue
        - value: YELLOW
          label: robotics.yellow
        - value: PINK
          label: robotics.pink
        - value: WHITE
          label: robotics.white

- name: turn-zumjunior-rgb-led-values
  instructionType: statement
  category: component
  subCategory: junior
  forComponents:
    - zumjunior-rgb-led
  code:
    main: |-
      zumJunior.setRGBLED({{getBloqCode(parameters.r)}}, {{getBloqCode(parameters.g)}}, {{getBloqCode(parameters.b)}});
  uiElements:
    - type: label
      text: robotics.turn-zumjunior-rgb-led-with-values
    - type: parameter
      parameterName: r
    - type: parameter
      parameterName: g
    - type: parameter
      parameterName: b

- name: turn-off-zumjunior-rgb-led
  instructionType: statement
  category: component
  subCategory: junior
  forComponents:
    - zumjunior-rgb-led
  code:
    main: |-
      zumJunior.setRGBLEDColor(BQ::ZUMJunior::BLACK);
  uiElements:
    - type: label
      text: robotics.turn-off-zumjunior-rgb-led

- name: play-zumjunior-buzz
  instructionType: statement
  category: component
  subCategory: junior
  forComponents:
    - zumjunior-buzzer
  code:
    main: |-
      zumJunior.play(BQ::ZUMJunior::{{parameters.note}}, {{parameters.duration}});
      delay({{parameters.duration}});
  diagram:
    symbolText: robotics.play-buzzer
  uiElements:
    - type: label
      text: robotics.play-buzzer-with-note
    - type: select
      parameterName: note
      options:
        - value: DO
          label: music.NOTE_C4
        - value: RE
          label: music.NOTE_D4
        - value: MI
          label: music.NOTE_E4
        - value: FA
          label: music.NOTE_F4
        - value: SOL
          label: music.NOTE_G4
        - value: LA
          label: music.NOTE_A4
        - value: SI
          label: music.NOTE_B4
    - type: label
      text: robotics.during
    - type: text-input
      parameterName: duration
      inputType: number
    - type: label
      text: robotics.milliseconds

- name: play-zumjunior-buzz-with-params
  instructionType: statement
  category: component
  subCategory: junior
  forComponents:
    - zumjunior-buzzer
  code:
    main: |-
      zumJunior.play({{getBloqCode(parameters.note)}}, {{getBloqCode(parameters.duration)}});
      delay({{getBloqCode(parameters.duration)}});
  uiElements:
    - type: label
      text: robotics.play-buzzer-with-note
    - type: parameter
      parameterName: note
    - type: label
      text: robotics.during
    - type: parameter
      parameterName: duration
    - type: label
      text: robotics.milliseconds

- name: if-zumjunior-button-pressed
  instructionType: block
  category: control
  subCategory: junior
  forComponents:
    - zumjunior-button
  code:
    main: |-
      if ({{"!" if not parameters.pressed}}digitalRead({{parameters.component.name}}Pin)) {
      {{getBloqsCode(children) | indent(4, true)}}
      }
  uiElements:
    - type: label
      text: robotics.if
    - type: select-component
      parameterName: component
      componentTypes:
        - zumjunior-button
    - type: label
      text: robotics.is
    - type: select
      parameterName: pressed
      options:
        - value: true
          label: robotics.pressed
        - value: false
          label: robotics.not-pressed
    - type: label
      text: robotics.execute

- name: zumjunior-display-number
  instructionType: statement
  category: component
  subCategory: junior
  forComponents:
    - zumjunior-7segment
  code:
    main: >
      {{parameters.component.name}}Obj.displayChar('{{parameters.digit1}}', '{{parameters.digit2}}');
  uiElements:
    - type: label
      text: robotics.write
    - type: text-input
      parameterName: digit1
      inputType: number
    - type: text-input
      parameterName: digit2
      inputType: number
    - type: label
      text: robotics.to-display
    - type: select-component
      parameterName: component
      componentTypes:
        - zumjunior-7segment
